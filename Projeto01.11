#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <time.h>
void menu(){
    printf("\n");
    printf("==PROGRAMA PARA MANIPULACAO DE MATRIZES==\n");
    printf("1-Definir o tamanho da matriz A\n");
    printf("2-Definir o tamanho da matriz B\n");
    printf("3-Preencher a matriz A com valores aleatorios\n");
    printf("4-Preencher a matriz B com valores aleatorios\n");
    printf("5-Atribuir valor para um elemento da matriz A\n");
    printf("6-Atribuir valor para um elemento da matriz B\n");
    printf("7-Calcular A+B\n");
    printf("8-Calcular A-B\n");
    printf("9-Calcular A*B\n");
    printf("10-Imprimir matriz A\n");
    printf("11-Imprimir matriz B\n");
    printf("12-Imprimir matriz C\n");
    printf("13-Ler a matriz A de um arquivo\n");
    printf("14-Ler a matriz B de um arquivo\n");
    printf("15-Escrever a matriz C em um arquivo\n");
    printf("16-Sair\n");
    printf("\n");
    printf("Digite sua opcao: ");
}
void op3(int ma[50][50], int nla, int nca){
    //Preencher a matriz A com valores aleatórios

    int i,j;
    printf("\n");
    srand(time(NULL));
    for(i=0; i<nla; i++){
        for(j=0; j<nca; j++){
            ma[i][j] = rand()%100;
        }
    }
    printf("\n");
}
void op4(int mb[50][50], int nlb, int ncb){
    //Preencher a matriz B com valores aleatórios

    int i,j;
    printf("\n");
    srand(time(NULL));

    for(i=0; i<nlb; i++){
        for(j=0; j<ncb; j++){
            mb[i][j] = rand()%100;
        }
    }
    printf("\n");
}
void op5(int ma[50][50]){
    //Atribuir valor para um elemento da matriz A
    int pl,pc,nv;
    printf("\n");
    printf("Digite a linha da posicao a ser modificada: ");
    scanf("%d",&pl);
    printf("Digite a coluna da posicao a ser modificada: ");
    scanf("%d",&pc);
    printf("Valor anterior: %d",ma[pc-1][pl-1]);
    printf("\n");
    printf("Digite o novo valor de A[%d][%d]: ",pl,pc);
    scanf("%d",&nv);
    ma[pl-1][pc-1]=nv;
    printf("Novo valor de A[%d][%d]: %d",pl,pc,ma[pc-1][pl-1]);
    printf("\n");

}
void op6(int mb[50][50]){
    //Atribuir valor para um elemento da matriz A
    int pl,pc,nv;
    printf("\n");
    printf("Digite a linha da posicao a ser modificada: ");
    scanf("%d",&pl);
    printf("Digite a coluna da posicao a ser modificada: ");
    scanf("%d",&pc);
    printf("Valor anterior: %d",mb[pc-1][pl-1]);
    printf("\n");
    printf("Digite o novo valor de B[%d][%d]: ",pl,pc);
    scanf("%d",&nv);
    mb[pl-1][pc-1]=nv;
    printf("Novo valor de B[%d][%d]: %d",pl,pc,mb[pc-1][pl-1]);
    printf("\n");

}
void op7(int ma[50][50], int nla, int nca, int mb[50][50], int nlb, int ncb,int mc[50][50]){
    //A+B
    //é preciso que todas elas tenham o mesmo número de linhas e de colunas

    if(nla==nlb && nca==ncb){
        //soma

        int i,j;
        for(i=0;i<nla;i++){
            for(j=0;j<nca;j++){
                mc[i][j]=ma[i][j]+mb[i][j];
            }
        }
        /*printf("Soma das matrizes A e B:\n");
        for(i=0;i<nla;i++){
            for(j=0;j<nca;j++){
                printf("%d ",mc[i][j]);
            }
            printf("\n");
        }*/
    }else{
        printf("Nao e possivel somar matrizes com tamanhos diferentes.");
    }
}
void op8(int ma[50][50], int nla, int nca, int mb[50][50], int nlb, int ncb,int mc[50][50]){
    //A-B
    //é preciso que todas elas tenham o mesmo número de linhas e de colunas

    if(nla==nlb && nca==ncb){
        //subtração

        int i,j;
        for(i=0;i<nla;i++){
            for(j=0;j<nca;j++){
                mc[i][j]=ma[i][j]-mb[i][j];
            }
        }
        /*printf("Subtracao das matrizes A e B:\n");
        for(i=0;i<nla;i++){
            for(j=0;j<nca;j++){
                printf("%d ",mc[i][j]);
            }
            printf("\n");
        }*/
    }else{
        printf("Nao e possivel subrair matrizes com tamanhos diferentes.");
    }
}

void op9(int ma[50][50], int nla, int nca, int mb[50][50], int nlb, int ncb,int mc[50][50]){
    //Calcular A*B
    //o número de colunas da primeira matriz é igual ao número de linhas da segunda matriz
    int i,j,k;

    if(nca==nlb){

        for(i=0;i<nla;i++){
            for(j=0;j<ncb;j++){
                mc[i][j]=0;
            }

        }
        for (i=0;i<nla; i++) {
            for (j=0; j<nla; j++) {
                for (k=0; k<nca; k++) {
                    mc[i][j] = mc[i][j] + (ma[i][k] * mb[k][j]);

                }

            }

        }
        /*printf("Multiplicacao das matrizes A e B:\n");
        for(i=0;i<nla;i++){
            for(j=0;j<ncb;j++){
                printf("%d ",mc[i][j]);
            }
            printf("\n");
        }*/

    }else{
        printf("Nao e possivel multiplicar essas matrizes. O numero de linhas da matriz B e diferente do numero de colunas da matriz A.");
    }

}

void op10(int ma[50][50], int nla, int nca){
    //Imprimir matriz A
    int i,j;
    printf("\n");
    printf("MATRIZ A\n");
    for(i=0;i<nla;i++){
        for(j=0;j<nca;j++){
            printf("%d ",ma[i][j]);
        }
        printf("\n");
    }
    printf("\n");
}
void op11(int mb[50][50], int nlb, int ncb){
    //Imprimir matriz B
    int i,j;
    printf("\n");
    printf("MATRIZ B\n");
    for(i=0;i<nlb;i++){
        for(j=0;j<ncb;j++){
            printf("%d ",mb[i][j]);
        }
        printf("\n");
    }
    printf("\n");
}
void op12(int mc[50][50],int nla,int ncb){
    //Imprimir matriz C



    int i,j;
    printf("MATRIZ C\n");
    for(i=0;i<nla;i++){
        for(j=0;j<ncb;j++){
            printf("%d ",mc[i][j]);
        }
        printf("\n");
    }
    printf("\n");

}

int main(void)
{
    int op=0;
    int nla=0,nca=0,nlb=0,ncb=0;
    int mc[50][50]={0};
    int ma[50][50];
    int mb[50][50];
    int ap=0,bp=0,cp=0;
    while(op!=16){
        menu();
        scanf("%d",&op);
        switch (op)
        {
        case 1:
            printf("\n");
            printf("==Tamanho da matriz A==\n");
            printf("Numero de linhas: ");
            scanf("%d",&nla);
            printf("Numero de colunas: ");
            scanf("%d",&nca);
            printf("\n");
            break;

        case 2:
            printf("\n");
            printf("==Tamanho da matriz B==\n");
            printf("Numero de linhas: ");
            scanf("%d",&nlb);
            printf("Numero de colunas: ");
            scanf("%d",&ncb);
            printf("\n");
            break;

        case 3:
            if(nca==0 && nla==0){
                printf("Matriz sem tamanho definido. Utilize a opcao 1.\n");
            }else{
                op3(ma,nla,nca);
                ap=1;
            }
            break;
        case 4:
            if(ncb==0 && nlb==0){
                printf("Matriz sem tamanho definido. Utilize a opcao 2.\n");
            }else{
                op4(mb,nlb,ncb);
                bp=1;
            }
            break;
        case 5:
            if(ap==0){
                printf("Matriz nao foi preenchida. Utilize a opcao 3.\n");
            }else{
                op5(ma);
            }

            break;
        case 6:
            if(bp==0){
                printf("Matriz nao foi preenchida. Utilize a opcao 4.\n");
            }else{
                op6(mb);
            }


            break;
        case 7:
            if(ap!=0){
                if(bp!=0){
                    op7(ma,nla,nca,mb,nlb,ncb,mc);
                    cp=1;
                }else{
                    printf("Matriz B não preenchida. Utilize a opcao 4.");
                }
            }else{
                printf("Matriz A não preenchida. Utilize a opcao 3.");
            }
            break;
        case 8:
            if(ap!=0){
                if(bp!=0){
                    op8(ma,nla,nca,mb,nlb,ncb,mc);
                    cp=1;
                }else{
                    printf("Matriz B não preenchida. Utilize a opcao 4.");
                }
            }else{
                printf("Matriz A não preenchida. Utilize a opcao 3.");
            }

            break;
        case 9:
            if(ap!=0){
                if(bp!=0){
                    op9(ma,nla,nca,mb,nlb,ncb,mc);
                    cp=1;
                }else{
                    printf("Matriz B não preenchida. Utilize a opcao 4.");
                }
            }else{
                printf("Matriz A não preenchida. Utilize a opcao 3.");
            }

            break;
        case 10:
            if(ap==0){
                printf("Matriz nao foi preenchida. Utilize a opcao 3.\n");
            }else{
                op10(ma,nla,nca);
            }
            break;
        case 11:
            if(bp==0){
                printf("Matriz nao foi preenchida. Utilize a opcao 4.\n");
            }else{
                op11(mb,nlb,ncb);
            }
            break;
        case 12:
            if(cp==0){
                printf("Matriz nao foi preenchida. Utilize a opcao 7, 8 ou 9.\n");
            }else{
                op12(mc,nla,ncb);
            }

            break;
        case 13:

            break;
        case 14:

            break;
        case 15:

            break;
        case 16:
            printf("SAIR\n");

            break;

        default:
            printf("opcao invalida,tente novamente\n");
        }
    }

    return 0;
}
